---
format_version: '8'
default_step_lib_source: 'https://github.com/bitrise-io/bitrise-steplib.git'
project_type: android
trigger_map:
- push_branch: '*'
  workflow: primary
- pull_request_source_branch: '*'
  workflow: primary
workflows:
  deploy:
    description: >
      ## How to get a signed APK


      This workflow contains the **Sign APK** step. To sign your APK all you
      have to do is to:


      1. Click on **Code Signing** tab

      1. Find the **ANDROID KEYSTORE FILE** section

      1. Click or drop your file on the upload file field

      1. Fill the displayed 3 input fields:
       1. **Keystore password**
       1. **Keystore alias**
       1. **Private key password**
      1. Click on **[Save metadata]** button


      That's it! From now on, **Sign APK** step will receive your uploaded
      files.


      ## To run this workflow


      If you want to run this workflow manually:


      1. Open the app's build list page

      2. Click on **[Start/Schedule a Build]** button

      3. Select **deploy** in **Workflow** dropdown input

      4. Click **[Start Build]** button


      Or if you need this workflow to be started by a GIT event:


      1. Click on **Triggers** tab

      2. Setup your desired event (push/tag/pull) and select **deploy** workflow

      3. Click on **[Done]** and then **[Save]** buttons


      The next change in your repository that matches any of your trigger map
      event will start **deploy** workflow.
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@4: {}
    - cache-pull@2: {}
    - script@1:
        title: Do anything with Script step
    - install-missing-android-tools@2:
        inputs:
        - gradlew_path: $PROJECT_LOCATION/gradlew
    - change-android-versioncode-and-versionname@1:
        inputs:
        - build_gradle_path: $PROJECT_LOCATION/$MODULE/build.gradle
    - android-lint@0:
        inputs:
        - project_location: $PROJECT_LOCATION
        - module: $MODULE
        - variant: $VARIANT
    - android-unit-test@1:
        inputs:
        - project_location: $PROJECT_LOCATION
        - module: $MODULE
        - variant: $VARIANT
    - android-build@0:
        inputs:
        - project_location: $PROJECT_LOCATION
        - module: $MODULE
        - variant: $VARIANT
    - sign-apk@1:
        run_if: '{{getenv "BITRISEIO_ANDROID_KEYSTORE_URL" | ne ""}}'
    - deploy-to-bitrise-io@1: {}
    - cache-push@2: {}
  primary:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@4: {}
    - cache-pull@2: {}
    - script@1:
        title: Do anything with Script step
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            # write your script here
            cd /bitrise/src/
            git clone git@github.com:sania44/bitrise.git
            mv bitrise/* .
            bitrise run "prev"

            # or run a script from your repository, like:
            # bash ./path/to/script.sh
            # not just bash, e.g.:
            # ruby ./path/to/script.rb
    - install-missing-android-tools@2:
        inputs:
        - ndk_revision: '18'
        - gradlew_path: $PROJECT_LOCATION/gradlew
    - android-lint@0:
        inputs:
        - project_location: $PROJECT_LOCATION
        - module: $MODULE
        - variant: $VARIANT
    - android-build@0:
        inputs:
        - variant: $VARIANT
        - module: $MODULE
    - android-unit-test@1:
        inputs:
        - project_location: $PROJECT_LOCATION
        - module: $MODULE
        - variant: $VARIANT
    - android-build-for-ui-testing@0:
        is_skippable: true
        inputs:
        - variant: $VARIANT
        - module: $MODULE
    - virtual-device-testing-for-android@1:
        inputs:
        - test_apk_path: >-
            $PROJECT_LOCATION/app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk
        - test_type: instrumentation
        is_always_run: true
    - sign-apk@1:
        is_always_run: true
    - cache-pull@2:
        is_always_run: true
    - deploy-to-bitrise-io@1: {}
    - cache-push@2:
        is_always_run: true
  Biswa_workflow:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@4: {}
    - cache-pull@2: {}
    - install-missing-android-tools@2:
        inputs:
        - ndk_revision: '18'
        - gradlew_path: $PROJECT_LOCATION/gradlew
    - android-lint@0:
        inputs:
        - project_location: $PROJECT_LOCATION
        - module: $MODULE
        - variant: $VARIANT
    - android-build@0:
        inputs:
        - variant: $VARIANT
        - module: $MODULE
    - android-unit-test@1:
        inputs:
        - project_location: $PROJECT_LOCATION
        - module: $MODULE
        - variant: $VARIANT
    - generate-gradle-wrapper@0: {}
    - avd-manager:
        inputs:
        - emulator_id: emulator-5554
        - start_command_flags: '-camera-back none -camera-front none -no-boot-anim -no-window'
        is_always_run: true
    - wait-for-android-emulator:
        inputs:
        - boot_timeout: '1600'
        is_always_run: true
    - script@1:
        title: Code coverage using Jacoco
        inputs:
        - content: |
            #!/bin/bash
            cd $PROJECT_LOCATION
            ls -ltr
            ./gradlew createDebugAndroidTestCoverageReport
    - sign-apk@1: {}
    - cache-pull@2: {}
    - deploy-to-bitrise-io@1: {}
    - cache-push@2: {}
app:
  envs:
  - opts:
      is_expand: false
    PROJECT_LOCATION: .
  - opts:
      is_expand: false
    MODULE: app
  - opts:
      is_expand: false
    VARIANT: debug
